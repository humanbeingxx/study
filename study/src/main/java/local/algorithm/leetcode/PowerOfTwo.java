package local.algorithm.leetcode;

/**
 * @author humanbeingxx@sina.com
 * @date 2019/12/20 23:48
 */
public class PowerOfTwo {

    public boolean isPowerOfTwo(int n) {
        if (n == 0) {
            return false;
        }
        return (n & 0b1) == n
                || (n & 0b10) == n
                || (n & 0b100) == n
                || (n & 0b1000) == n
                || (n & 0b10000) == n
                || (n & 0b100000) == n
                || (n & 0b1000000) == n
                || (n & 0b10000000) == n
                || (n & 0b100000000) == n
                || (n & 0b1000000000) == n
                || (n & 0b10000000000) == n
                || (n & 0b100000000000) == n
                || (n & 0b1000000000000) == n
                || (n & 0b10000000000000) == n
                || (n & 0b100000000000000) == n
                || (n & 0b1000000000000000) == n
                || (n & 0b10000000000000000) == n
                || (n & 0b100000000000000000) == n
                || (n & 0b1000000000000000000) == n
                || (n & 0b10000000000000000000) == n
                || (n & 0b100000000000000000000) == n
                || (n & 0b1000000000000000000000) == n
                || (n & 0b10000000000000000000000) == n
                || (n & 0b100000000000000000000000) == n
                || (n & 0b1000000000000000000000000) == n
                || (n & 0b10000000000000000000000000) == n
                || (n & 0b100000000000000000000000000) == n
                || (n & 0b1000000000000000000000000000) == n
                || (n & 0b10000000000000000000000000000) == n
                || (n & 0b100000000000000000000000000000) == n
                || (n & 0b1000000000000000000000000000000) == n;
    }
}
